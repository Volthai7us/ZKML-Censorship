use dep::noir_ml::{layers::fc, activations::relu, utils::arg_max};

global w1: [Field; 1350] = [-1735, -2362, -79, 59, -646, -1069, -552, -728, -1077, -1182, -1615, 840, 500, 1025, -2218, -666, 778, -864, -850, -876, 543, 770, -1148, 1855, -1843, 1393, -113, -4520, -470, 298, -5841, 1000, 3029, -6477, 2408, 5697, 3550, 150, -8389, 6974, -777, -5337, 4705, -1038, -6364, -791, 2841, 2245, 3621, 2876, 1835, 3614, 2520, 1555, -1489, -1139, -977, 5948, 4922, -1608, 3154, 3718, 8811, -3209, -8687, -5873, 926, 2776, -15063, 19058, -91974, 18453, 6428, -2107, -549, -3691, -368, -2072, -231, -1687, -2277, -3901, 3024, -2862, -1785, 4124, -5652, -3178, -8662, 3955, 4003, 4924, 5262, 5227, -172, 4377, 12758, -42087, -14438, 1701, 2716, 3447, 3093, 4214, 2818, 4773, 1850, 2641, -8864, 4100, 5449, 5993, 650, 3494, -7551, -5656, -26975, 4189, -6376, -4054, -2094, -2775, -1686, -1560, -1625, 639, -1102, -1300, 137, 295, -335, 947, -1302, -1855, 882, 6196, 6819, -4573, -7568, -1184, -3754, 3245, 4054, -4466, 3259, 9998, 1537, 873, 5620, -6672, 3921, 25908, -41100, 6253, -1995, -343, -2408, -3018, -1326, -2541, -1986, -137, -186, 1785, 5703, -4836, 4894, -944, 1264, -1628, 630, 6252, 2989, -3285, -4618, 8498, -2297, 4782, 20835, -21489, 9922, -2040, -4233, -2114, -481, -1905, -1538, -4141, -3088, 6969, -3892, -2533, -3039, 3945, -1245, 5294, 5846, -421, -6550, -1826, -1686, 1085, 19, 18227, -11952, -15438, 18620, 8139, -924, -1807, -1015, -3520, -2174, -1143, -2047, -3445, 4520, -809, 469, -5770, 4494, 1063, 3178, 2680, -1049, -3698, 903, -4950, -3195, 15102, 13569, -18364, 9838, -35573, -2215, -915, -726, 452, -1589, -1093, -401, 604, 738, -148, -12107, -103, 456, 3584, 1691, -4979, -1954, 3516, -5320, -1621, -8159, 11478, 4603, -6323, 3120, -2886, 5798, -7016, -555, -670, 1060, -379, -2177, 261, -1205, -900, -4944, 1815, 1966, 3923, -8539, -4187, -2827, 596, 325, 1471, 101, 3758, 17410, -15665, -6229, 13032, -9510, 14738, 8080, -2564, -2350, -1616, -2573, 224, -1576, -14, -1687, 2887, -1750, -2144, 4956, -987, -5003, -6845, -3966, 651, 6676, -2128, -5444, -1109, 2887, 1881, -18669, -13889, 1041, 3786, 2204, 397, 3066, 3705, 3126, 3883, 4091, 825, 2279, -4400, -7619, -6020, -3896, 1319, 7951, 4881, -4792, 1416, -5999, 2857, 2567, -24, -5605, 12607, -49771, -19518, -1216, -410, -1519, -1672, -218, -548, -627, -1271, -2298, 487, -6023, 1581, -5841, -421, 3113, 1341, 5876, -6434, -2104, 1578, 5769, 3103, 1816, -30349, 10632, 28000, -31390, 615, 1462, -335, -559, -1413, 259, -78, 652, 393, -1585, -4442, -6854, 1110, 895, 1618, -2143, -643, 5158, -108, -1750, -11854, -1764, 5657, 15449, -20216, 46416, -55535, -1282, -1601, -1114, -656, 1885, 86, -1337, 1312, 608, 828, 6788, -6882, -1931, 478, 970, 2441, 1826, 4995, -7223, 5143, -13652, -457, -2967, -519, 13678, -13415, -2107, 812, -1407, 404, -904, 839, 1218, -1135, 128, -1430, 4046, -4503, -5814, 1348, -1570, 3123, 2165, 2575, 2930, -1592, -1483, 202, -952, 9913, -57147, 30111, -11661, 56992, 72, 3982, 1062, 4278, 2952, 2788, 4233, 1322, 4422, 6232, -559, -422, 3745, 506, -6746, 1286, 3292, 5956, 2264, 1556, -2461, 7996, 30479, 4840, -39273, -3423, -58184, 558, 4936, 2014, 4440, 1821, 2672, 5327, 3966, 5139, 3977, -4583, 738, 3313, -2980, -2716, 5507, -4496, -7321, 5571, 1754, 3033, 5462, -4459, -10068, 7906, 24658, 7163, 5695, -1462, -262, -3089, -617, -2093, -712, -1504, -2949, -3039, 125, 3136, -1133, 1215, 4776, -3569, -1854, -10809, -1860, 6629, 6473, 1359, -2160, 4610, -1423, -41960, 1145, -4137, 3845, 3950, 4569, 3968, 2382, 4001, 4067, 4007, -7124, 4780, 692, 4365, -9853, -5008, 450, -4267, -3419, 5867, 1085, 2340, 8367, -2643, -3832, -32827, -32694, -4867, -1581, -643, -1221, -817, -274, 327, -155, -358, 969, 5359, -5794, 1652, -4418, -7008, 2376, -646, 2856, 2, 8284, 2903, 1728, 1486, -4033, -7245, 1238, -833, 232, 3597, 2589, 4957, 5636, 4815, 3036, 4037, 2475, 4206, -12859, -19306, 11707, -15133, -6384, 229, -1167, -299, -2496, -1408, 378, -1365, 528, -145, -1257, 1519, -542, -801, -945, -1680, -947, -36, 1609, 4, -1374, 188, -560, -717, -2639, -2536, -1176, -296, -1916, -1279, 602, 503, -673, 949, 345, -798, -1443, -766, -639, 1132, -1732, 1704, 1705, -1519, 132, 343, 263, -635, 25, 419, 1098, 1610, 6521, -527, 5936, -3128, -6697, 3620, -4970, 8476, 28, -12855, -6027, -11389, 10645, -2295, 119912, -6650, 7940, -676, -1312, -1614, -687, -1945, -2530, -3567, -1849, -2633, -267, -3287, 209, 6970, 8575, -2138, 3258, -594, -830, -1003, 7765, -4304, 12841, 5603, -35546, 19342, 7919, 4182, -3017, -1166, -2936, -2249, -2807, -1010, -2647, -3268, -1045, -2756, -9211, 1074, -477, 3171, -326, 3737, 4209, 1375, -2080, -10550, -1399, 16429, 4258, -19919, -4172, 449, 5951, -434, 649, -1128, -1717, 215, -637, -409, -683, -1934, -294, -1709, -2191, 367, -1234, -801, -932, -59, -999, -2434, 1276, -2272, 717, 345, 38, -420, -684, -48, 1766, -221, 790, -1769, 1813, -704, -16, -99, 4739, 3863, 1162, -10069, -2716, -3959, 2898, -4339, -4622, 5213, 3955, -7610, -10004, 6570, 3518, 10202, 8028, -14992, 3287, 2252, 4030, 1635, 2440, 4177, 5247, 4497, 2400, 1643, -6838, -1359, 654, 6137, 3071, -10969, 278, 4945, -2305, -8783, -12494, 10099, 8131, -13405, -11415, 16125, -11809, -1326, 601, 1381, -648, 1043, 1420, -1371, -638, -1063, 3250, -5433, 8091, -3310, 3712, 3388, 3033, 3133, 5392, -6228, -7592, -77, 2140, -6063, -7234, -3785, -18690, -4023, 1020, 3933, 2800, 4541, 3740, 1704, 1750, 2719, 1728, -6159, -4310, 1156, -7129, 5008, -11392, -13002, 1081, 13709, -4268, -6349, 8437, -39479, -4574, -9060, 16956, -7769, -344, -460, 163, -631, -1691, 1333, 1468, -152, -1528, 1686, -7063, 832, 1162, 1292, 5509, -9317, -6928, -2481, 8427, 1015, -3579, 3085, -11501, 7798, 11412, -3693, 1043, -1035, 11611, -120, -3257, -1456, -1313, -1417, -2419, -3307, -2491, -130, -13, -6463, -355, 6979, 4774, -4611, -866, 5387, 1306, 6652, -5166, -2594, 4232, -576, -6646, -4255, 5857, 1358, 1960, 1704, 2584, 3561, 4774, 2223, 3654, 4815, -3572, -226, -1842, 3105, 5735, 2047, -7077, 7013, 1388, -1952, -12963, -3978, 2509, 5758, -499, -17396, -21550, -5353, -2011, -1351, -476, -634, 71, -1827, 247, 74, -1215, 6367, -57, -646, -185, -5621, -1303, 261, 2420, -1032, -6540, 4380, 4997, 7244, -3705, -982, 9258, 24959, -2012, 1002, 3897, 4478, 3697, 1115, 4641, 1191, 1193, 3482, -2476, -2386, -789, -2328, -1375, -1407, -987, 466, -1268, -1688, 708, -611, -1506, -878, -336, -39, 922, -956, -1328, 584, 1713, 1166, -947, -1577, -1793, -410, -110, -153, -1766, -406, -164, -364, -2183, 1038, -822, -701, -1835, 874, -889, -1477, -739, 1525, 108, -486, -898, -1164, 1159, 873, 1217, 561, -575, -1000, 589, -1695, -2085, -1559, -5117, -102, -1712, 6137, 3634, 641, 1568, -6476, 8141, -6459, -2162, -2781, -5314, 16157, -42123, -5777, -1972, -180, 43, 56, 506, -317, -1956, -174, -225, 2277, 377, -5163, -1895, -507, -3436, -2255, -535, 5987, 4968, 6998, 1040, 3295, 4823, 195, 1685, 16302, 9845, 5862, -2536, -1814, 164, -2154, -1666, -473, -934, -1812, -4825, -6309, 1559, 5556, -2562, 3217, 2400, -1197, 2851, -4207, -984, -6835, -2036, 7517, -5864, -12071, 156578, -17776, -2614, 338, 942, -7, 2596, -604, 843, -48, 1435, 718, -9014, 4092, -4742, -817, 2928, 3517, -467, 5679, -2028, -1114, -4390, 136, 1930, -4999, 13711, -46054, 40118, 4224, -2211, 455, -1885, -2519, -1532, -1598, 244, -1372, 3491, 717, 578, -2717, 4921, -4546, -2812, 2144, -4951, 6890, 5916, 2982, -5787, 1970, -460, -2069, -60361, -2671, -2010, -1284, 541, -654, 807, -2322, -469, 294, 732, 486, -227, 1008, -2412, 466, -1078, -746, -925, -2484, 241, -1544, -2176, 275, -2092, -366, 59, -225, -1127, -544, -458, 206, -1794, 750, -554, 1497, 1482, -1573, -585, -3324, 2046, 3738, 8608, -7406, -11499, -12652, 3385, -1281, 10479, -4668, 7040, 4109, 12833, 18006, -16250, 13576, 6052, -691, -2682, 125, -2500, -246, -3062, -2073, -2675, 1207, -2925, 6575, -900, 6499, -6347, -4813, -5016, 468, 3239, 1989, -8891, -7192, 5878, 8009, 38351, -32285, -20569, 4628, 5643, 4224, 3780, 5027, 5819, 6710, 4593, 3974, -1627, 969, -1398, -582, -100, -207, 710, 193, -518, 250, 911, -2041, 594, -2133, -1609, 121, -1160, -870, 1587, 539, 2858, -364, 2262, -128, 2506, -241, 399, -1705, 944, -2346, -2008, -4780, -3508, 1416, 5336, -1020, 2224, 5937, 3813, -2494, -1883, -4699, 17634, 146, 3048, 3888, 2137, 5013, 4373, 3687, 4085, 2728, 4504, 3010, -3957, 199, 3473, 2996, 3300, -3676, -5645, -18568, 9031, -5895, -1271, 5574, -5019, -22217, 7372, -8291, 19208, -616, -1404, -1615, 574, -1391, 173, 308, 753, -1941, -752, 2810, 1440, -3046, -3452, 3721, 3134, 10125, 3771, -4964, 2275, 7944, -7391, 3366, -4729, -8375, -7404, -81418, -1505, 403, 633, 3448, 2018, 3684, 992, 2102, 2837, 679];
global b1: [Field; 50] = [-1428, 1866, -1794, -133, -9277, -234, -3938, -1714, -4220, 4593, 2918, 2941, 3184, -5308, 1893, -6439, -1133, -538, 1961, -224, 1195, -4822, -7099, -1892, -591, -1822, 1008, -1845, -2005, 2740, 4760, -2823, 360, 2442, -1404, -5643, -565, -1820, 4744, -1080, 1488, 4750, -434, -1885, 1967, -20, -2154, 3314, -2860, -2042];

global w2: [Field; 100] = [-231, 9075, -8677, 11943, 6082, -11608, -10164, -10800, 11659, 11027, -12466, 6794, 7637, -20996, 12175, 11333, 8196, 6503, -8985, 6494, 11551, 4805, -32155, 74, -10071, -9048, -14703, 108, 5976, -11577, 5867, 25412, -10226, 7897, 11826, 15082, -395, -703, -9285, -8788, 9697, -8755, 8032, 1411, -9054, 9062, -896, 7093, 10201, 10234, -353, -7324, 7653, -11528, -5496, 12843, 9719, 10792, -12447, -9742, 10994, -5426, -6189, 21906, -11830, -9721, -9012, -6381, 8558, -5769, -11054, -6057, 32153, -663, 8642, 9839, 14202, 235, -8545, 10961, -5578, -25794, 11330, -8085, -12625, -14511, -1174, -820, 10031, 9830, -8039, 8639, -6841, 345, 7568, -11351, -710, -7112, -11804, -7962];
global b2: [Field; 2] = [13279104, -12373086];

fn main(input: [Field; 27]) -> pub Field {
  let output = input;
  let output = relu(fc(output, w1, b1));
  let output = arg_max(fc(output, w2, b2));
  output
}

////////////////////
//     TESTS      //
////////////////////
#[test]
fn test_main_001() {
  let sample = [7909, 790, 691, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
  assert(main(sample) == 1);
}

#[test]
fn test_main_002() {
  let sample = [9987, 2657, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
  assert(main(sample) == 1);
}

#[test]
fn test_main_003() {
  let sample = [5040, 7306, 5641, 9144, 1262, 9674, 2633, 41, 5241, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
  assert(main(sample) == 1);
}

#[test]
fn test_main_004() {
  let sample = [5137, 9091, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
  assert(main(sample) == 0);
}

#[test]
fn test_main_005() {
  let sample = [7666, 4511, 5942, 969, 9174, 7070, 6083, 9093, 9311, 6261, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
  assert(main(sample) == 1);
}

#[test]
fn test_main_006() {
  let sample = [386, 2238, 790, 9090, 6357, 8286, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
  assert(main(sample) == 1);
}

#[test]
fn test_main_007() {
  let sample = [3043, 3097, 3007, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
  assert(main(sample) == 1);
}

#[test]
fn test_main_008() {
  let sample = [9416, 9460, 5867, 5273, 2528, 7676, 4453, 6953, 3343, 3867, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
  assert(main(sample) == 0);
}

#[test]
fn test_main_009() {
  let sample = [3137, 6622, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
  assert(main(sample) == 1);
}

#[test]
fn test_main_010() {
  let sample = [3991, 312, 4875, 6623, 2433, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
  assert(main(sample) == 0);
}

